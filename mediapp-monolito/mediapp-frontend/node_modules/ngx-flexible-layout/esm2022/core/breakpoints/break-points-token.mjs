/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */
import { inject, InjectionToken } from '@angular/core';
import { mergeByAlias } from '../breakpoints/breakpoint-tools';
import { DEFAULT_BREAKPOINTS } from '../breakpoints/data/break-points';
import { ORIENTATION_BREAKPOINTS } from '../breakpoints/data/orientation-break-points';
import { BREAKPOINT } from '../tokens/breakpoint-token';
import { LAYOUT_CONFIG } from '../tokens/library-config';
/**
 *  Injection token unique to the flex-layout library.
 *  Use this token when build a custom provider (see below).
 */
export const BREAKPOINTS = new InjectionToken('Token (ngx-flexible-layout) Breakpoints', {
    providedIn: 'root',
    factory: () => {
        const breakpoints = inject(BREAKPOINT);
        const layoutConfig = inject(LAYOUT_CONFIG);
        const bpFlattenArray = [].concat.apply([], (breakpoints || [])
            .map((v) => Array.isArray(v) ? v : [v]));
        const builtIns = (layoutConfig.disableDefaultBps ? [] : DEFAULT_BREAKPOINTS)
            .concat(layoutConfig.addOrientationBps ? ORIENTATION_BREAKPOINTS : []);
        return mergeByAlias(builtIns, bpFlattenArray);
    }
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYnJlYWstcG9pbnRzLXRva2VuLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvbGlicy9mbGV4LWxheW91dC9jb3JlL2JyZWFrcG9pbnRzL2JyZWFrLXBvaW50cy10b2tlbi50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7O0dBTUc7QUFFSCxPQUFPLEVBQUUsTUFBTSxFQUFFLGNBQWMsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUN2RCxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0saUNBQWlDLENBQUM7QUFDL0QsT0FBTyxFQUFFLG1CQUFtQixFQUFFLE1BQU0sa0NBQWtDLENBQUM7QUFDdkUsT0FBTyxFQUFFLHVCQUF1QixFQUFFLE1BQU0sOENBQThDLENBQUM7QUFDdkYsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLDRCQUE0QixDQUFDO0FBQ3hELE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSwwQkFBMEIsQ0FBQztBQUd6RDs7O0dBR0c7QUFDSCxNQUFNLENBQUMsTUFBTSxXQUFXLEdBQ3RCLElBQUksY0FBYyxDQUFlLHlDQUF5QyxFQUFFO0lBQzFFLFVBQVUsRUFBRSxNQUFNO0lBQ2xCLE9BQU8sRUFBRSxHQUFHLEVBQUU7UUFDWixNQUFNLFdBQVcsR0FBUSxNQUFNLENBQUMsVUFBVSxDQUFDLENBQUM7UUFDNUMsTUFBTSxZQUFZLEdBQUcsTUFBTSxDQUFDLGFBQWEsQ0FBQyxDQUFDO1FBQzNDLE1BQU0sY0FBYyxHQUFpQixFQUFFLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxFQUFFLEVBQUUsQ0FBQyxXQUFXLElBQUksRUFBRSxDQUFDO2FBQ3pFLEdBQUcsQ0FBQyxDQUFDLENBQTRCLEVBQUUsRUFBRSxDQUFDLEtBQUssQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDdEUsTUFBTSxRQUFRLEdBQUcsQ0FBQyxZQUFZLENBQUMsaUJBQWlCLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsbUJBQW1CLENBQUM7YUFDekUsTUFBTSxDQUFDLFlBQVksQ0FBQyxpQkFBaUIsQ0FBQyxDQUFDLENBQUMsdUJBQXVCLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDO1FBRXpFLE9BQU8sWUFBWSxDQUFDLFFBQVEsRUFBRSxjQUFjLENBQUMsQ0FBQztJQUNoRCxDQUFDO0NBQ0YsQ0FBQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IEdvb2dsZSBMTEMgQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbiAqXG4gKiBVc2Ugb2YgdGhpcyBzb3VyY2UgY29kZSBpcyBnb3Zlcm5lZCBieSBhbiBNSVQtc3R5bGUgbGljZW5zZSB0aGF0IGNhbiBiZVxuICogZm91bmQgaW4gdGhlIExJQ0VOU0UgZmlsZSBhdCBodHRwczovL2FuZ3VsYXIuaW8vbGljZW5zZVxuICovXG5cbmltcG9ydCB7IGluamVjdCwgSW5qZWN0aW9uVG9rZW4gfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IG1lcmdlQnlBbGlhcyB9IGZyb20gJy4uL2JyZWFrcG9pbnRzL2JyZWFrcG9pbnQtdG9vbHMnO1xuaW1wb3J0IHsgREVGQVVMVF9CUkVBS1BPSU5UUyB9IGZyb20gJy4uL2JyZWFrcG9pbnRzL2RhdGEvYnJlYWstcG9pbnRzJztcbmltcG9ydCB7IE9SSUVOVEFUSU9OX0JSRUFLUE9JTlRTIH0gZnJvbSAnLi4vYnJlYWtwb2ludHMvZGF0YS9vcmllbnRhdGlvbi1icmVhay1wb2ludHMnO1xuaW1wb3J0IHsgQlJFQUtQT0lOVCB9IGZyb20gJy4uL3Rva2Vucy9icmVha3BvaW50LXRva2VuJztcbmltcG9ydCB7IExBWU9VVF9DT05GSUcgfSBmcm9tICcuLi90b2tlbnMvbGlicmFyeS1jb25maWcnO1xuaW1wb3J0IHsgQnJlYWtQb2ludCB9IGZyb20gJy4vYnJlYWstcG9pbnQnO1xuXG4vKipcbiAqICBJbmplY3Rpb24gdG9rZW4gdW5pcXVlIHRvIHRoZSBmbGV4LWxheW91dCBsaWJyYXJ5LlxuICogIFVzZSB0aGlzIHRva2VuIHdoZW4gYnVpbGQgYSBjdXN0b20gcHJvdmlkZXIgKHNlZSBiZWxvdykuXG4gKi9cbmV4cG9ydCBjb25zdCBCUkVBS1BPSU5UUyA9XG4gIG5ldyBJbmplY3Rpb25Ub2tlbjxCcmVha1BvaW50W10+KCdUb2tlbiAobmd4LWZsZXhpYmxlLWxheW91dCkgQnJlYWtwb2ludHMnLCB7XG4gICAgcHJvdmlkZWRJbjogJ3Jvb3QnLFxuICAgIGZhY3Rvcnk6ICgpID0+IHtcbiAgICAgIGNvbnN0IGJyZWFrcG9pbnRzOiBhbnkgPSBpbmplY3QoQlJFQUtQT0lOVCk7XG4gICAgICBjb25zdCBsYXlvdXRDb25maWcgPSBpbmplY3QoTEFZT1VUX0NPTkZJRyk7XG4gICAgICBjb25zdCBicEZsYXR0ZW5BcnJheTogQnJlYWtQb2ludFtdID0gW10uY29uY2F0LmFwcGx5KFtdLCAoYnJlYWtwb2ludHMgfHwgW10pXG4gICAgICAgIC5tYXAoKHY6IEJyZWFrUG9pbnQgfCBCcmVha1BvaW50W10pID0+IEFycmF5LmlzQXJyYXkodikgPyB2IDogW3ZdKSk7XG4gICAgICBjb25zdCBidWlsdElucyA9IChsYXlvdXRDb25maWcuZGlzYWJsZURlZmF1bHRCcHMgPyBbXSA6IERFRkFVTFRfQlJFQUtQT0lOVFMpXG4gICAgICAgIC5jb25jYXQobGF5b3V0Q29uZmlnLmFkZE9yaWVudGF0aW9uQnBzID8gT1JJRU5UQVRJT05fQlJFQUtQT0lOVFMgOiBbXSk7XG5cbiAgICAgIHJldHVybiBtZXJnZUJ5QWxpYXMoYnVpbHRJbnMsIGJwRmxhdHRlbkFycmF5KTtcbiAgICB9XG4gIH0pO1xuIl19